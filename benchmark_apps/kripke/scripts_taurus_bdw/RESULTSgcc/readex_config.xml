<?xml version="1.0" encoding="utf-8"?>
<Configuration>
    <!--  The following section specifies the dynamism results for each significant regions and across all phases  -->
    <readex-dyn-detect>
        <Intra-phase>
            <significantRegion>
                <name>virtual void Kernel_3d_GZD::LTimes(Grid_Data*)</name>
                <granularity>1.44469</granularity>
                <weight>40.848877616514976</weight>
                <time_variation_reg>0</time_variation_reg>
                <time_variation_phase>0</time_variation_phase>
                <compute_intensity>82.207036253645754</compute_intensity>
            </significantRegion>
            <significantRegion>
                <name>virtual void Kernel_3d_GZD::scattering(Grid_Data*)</name>
                <granularity>0.62046500000000004</granularity>
                <weight>17.54376291822534</weight>
                <time_variation_reg>0</time_variation_reg>
                <time_variation_phase>0</time_variation_phase>
                <compute_intensity>1671.2345838226142</compute_intensity>
            </significantRegion>
            <significantRegion>
                <name>virtual void Kernel_3d_GZD::LPlusTimes(Grid_Data*)</name>
                <granularity>1.25282</granularity>
                <weight>35.423717791029418</weight>
                <time_variation_reg>0</time_variation_reg>
                <time_variation_phase>0</time_variation_phase>
                <compute_intensity>100.7463990511492</compute_intensity>
            </significantRegion>
            <significantRegion>
                <name>void SweepSubdomains(std::vector&lt;int&gt;, Grid_Data*, bool)</name>
                <granularity>0.14776900000000001</granularity>
                <weight>4.1781958735194413</weight>
                <time_variation_reg>8.4121838815989829</time_variation_reg>
                <time_variation_phase>0.35147751981383618</time_variation_phase>
                <compute_intensity>51.953657026649793</compute_intensity>
            </significantRegion>
            <significantRegion>
                <name>double Grid_Data::particleEdit()</name>
                <granularity>0.0706677</granularity>
                <weight>1.9981423203182656</weight>
                <time_variation_reg>27.970062701913324</time_variation_reg>
                <time_variation_phase>0.55888165986648464</time_variation_phase>
                <compute_intensity>23.536636642754953</compute_intensity>
            </significantRegion>
        </Intra-phase>
        <Inter-phase>
            <name>Loop</name>
            <variation>0</variation>
        </Inter-phase>
        <Thresholds>
            <weight>10</weight>
            <time_variation>10</time_variation>
            <compute_intensity_variation>10</compute_intensity_variation>
            <granularity_significant_region>0.01</granularity_significant_region>
        </Thresholds>
        <dynamism>
            <dyn_time_variation/>
            <dyn_comIn_variation>
                <name>virtual void Kernel_3d_GZD::LTimes(Grid_Data*)</name>
                <name>virtual void Kernel_3d_GZD::scattering(Grid_Data*)</name>
                <name>virtual void Kernel_3d_GZD::LPlusTimes(Grid_Data*)</name>
            </dyn_comIn_variation>
        </dynamism>
    </readex-dyn-detect>
    <!--  This section specifies all the tuning parameter such as frequency, uncore frequency, no of threads and so on  -->
    <tuningParameter>
        <frequency>
            <min_freq>1200</min_freq>
            <max_freq>2400</max_freq>
            <freq_step>500</freq_step>
            <default>2500</default>
        </frequency>
        <uncore>
            <min_freq>1000</min_freq>
            <max_freq>3000</max_freq>
            <freq_step>1000</freq_step>
            <default>3000</default>
        </uncore>
        <openMPThreads>
            <lower_value>1</lower_value>
            <step>2</step>
        </openMPThreads>
    </tuningParameter>
    <!--  The following section specifies all the objective metrics  -->
    <objectives>
        <objective>Energy</objective>
        <!--<objective>NormalizedEnergy</objective>-->
        <!--<objective>Time</objective>-->
        <!--<objective>NormalizedTime</objective>-->
        <!--<objective>EDP</objective>-->
        <!--<objective>NormalizedEDP</objective>-->
        <!--<objective>ED2P</objective>-->
        <!--<objective>NormalizedED2P</objective>-->
        <!--<objective>CPUEnergy</objective>-->
        <!--<objective>NormalizedCPUEnergy</objective>-->
        <!--<objective>TCO</objective>-->
        <!--<objective>NormalizedTCO</objective>-->
        <!--<CostPerJoule>0.00000008</CostPerJoule>-->
        <!-- Euro -->
        <!--<CostPerCoreHour>1.0</CostPerCoreHour>-->
        <!-- Euro -->
    </objectives>
    <!--  metrics section specifies energy metrics to be measured across nodes. In SearchAlgorithm section one has to specify at least one search algorithm for readex tuning plugins  -->
    <periscope>
        <metricPlugin>
            <name>hdeem_sync_plugin</name>
            <!--<name>x86_energy_sync_plugin</name>-->
        </metricPlugin>
        <metrics>
            <node_energy>hdeem/BLADE/E</node_energy>
            <cpu0_energy>hdeem/CPU0/E</cpu0_energy>
            <cpu1_energy>hdeem/CPU1/E</cpu1_energy>
            <!--<node_energy>x86_energy/BLADE/E</node_energy>-->
        </metrics>
        <metricUnits>
            <timeUnit>s</timeUnit>
            <energyUnit>mj</energyUnit>
            <currencyUnit>Euro</currencyUnit>
        </metricUnits>
        <searchAlgorithm>
            <name>individual</name>
            <!--<keep>2</keep>-->
            <!--<name>exhaustive</name>-->
            <!--<name>random</name>-->
            <!--<samples>2</samples>-->
        </searchAlgorithm>
        <atp>
            <searchAlgorithm>
                <name>individual_atp</name>
                <!--<name>exhaustive_atp</name>-->
            </searchAlgorithm>
        </atp>
        <tuningModel>
            <file_path>tuning_model.json</file_path>
        </tuningModel>
    </periscope>
    <!--  This section defines which substrate plugin to be used for READEX tuning plugins  -->
    <scorep>
        <tuningSubstrate>rrl</tuningSubstrate>
    </scorep>
</Configuration>
